listLen = zb2rhewXLf1ikYbooDBeg19TsobyB71Y8XMjtAksfNTE3gDFk
listMatch = zb2rhgr3EHmgEAgPo4gLfb1fmZ4gTUhfAYhW8U7n7mppBLjw7
numMax = zb2rhgW9d2oK9kk6E3a2U2dRYpXa5xHD5gnjQ3Ruso5NeuskP

O = I => O => O
I = I => O => I

fullAdder = a => b => c =>
  c000 = p => (p O O)
  c001 = p => (p I O)
  c010 = p => (p I O)
  c011 = p => (p O I)
  c100 = p => (p I O)
  c101 = p => (p O I)
  c110 = p => (p O I)
  c111 = p => (p I I)
  (a (b (c c111 c110) (c c101 c100))
     (b (c c011 c010) (c c001 c000)))

getBit = a =>
  caseCons = a => as => p =>
    (p a as)
  caseNil = p =>
    (p O c => n => n)
  (a caseCons caseNil)

bigAddL = len => as => bs =>
  startState =
    p => (p (listMatch as) (listMatch bs) O c => n => n)

  endState =
    (for 0 len startState i => state =>
      (state as => bs => c => r =>
        (getBit as a => as =>
          (getBit bs b => bs =>
            (fullAdder a b c s => c =>
              t => (t as bs c (c => n => (r c (c s n)))))))))

  (endState as => bs => carry =>
    caseCons = r => c => n => (r c (c I n))
    caseNil = r => r
    (carry caseCons caseNil))

as => bs =>
  asLen = (listLen as)
  bsLen = (listLen bs)
  csLen = (numMax asLen bsLen)
  (bigAddL csLen as bs)
